@page "/downloads"
@using File_Upload.Services;
@inject IFileDownload fileDownload;

<h3>Downloads</h3>

@if(previewImages.Count > 0)
{
    <div class="card">
        <div class="row align-items-start">
            @foreach (var item in previewImages)
            {
                var type = item.Split(";");
                //var file  = item.Remove(item.LastIndexOf(";fileName")); 
                //<h4>@type[2].Replace("fileName", "")</h4>
                <div class="col-2">
                    @if (type[0].Contains("image"))
                    {
                        <img class="rounded float-left" src="@item" width="100" height="100"/>
                    }
                    else
                    {
                        if (type[0].Contains("pdf"))
                        {
                             <img class="rounded float-left" src="images/pdf_logo.png" width="100" height="100"/>
                        }
                    }
                    <button @onclick="()=> DownloadFile(item)"> Download</button>
                </div> 
            }
        </div>
    </div>
}

@code {
    private IList<string> previewImages = new List<string>();

    protected async override Task OnInitializedAsync()
    {
        previewImages = await fileDownload.GetUploadFiles();
    }

    private async void DownloadFile(string url)
    {
        await fileDownload.Download(url);
    }

    private string  GetFileName(string b64Str)
    {
        Byte[] bytes = Convert.FromBase64String(b64Str);

        return Path.GetFileName(bytes.ToString());
    }
}
